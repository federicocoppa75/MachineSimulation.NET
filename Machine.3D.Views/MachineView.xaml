<UserControl x:Class="Machine._3D.Views.MachineView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Machine._3D.Views"
             xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
             xmlns:converters="clr-namespace:Machine._3D.Views.Converters"
             xmlns:lhx3D="clr-namespace:Machine._3D.Views.Models.Elements3D"
             xmlns:selectors="clr-namespace:Machine._3D.Views.Selectors"
             xmlns:const="clr-namespace:Machine._3D.Views.Constants"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <const:Materials x:Key="materials" />
        <const:Geometries x:Key="geometries"/>
        <converters:DirectionToAxisConverter x:Key="directionToAxisConverter"/>
        <converters:LinearLinkPositionConverter x:Key="linearLinkPositionConverter"/>
        <converters:ColorToMaterialConverter x:Key="colorToMaterialConverter" />
        <converters:ModelNameToGeometryConverter x:Key="modelNameToGeometryConverter" />
        <converters:StaticTransformationConverter x:Key="staticTransformationConverter"/>
        <converters:ToolToGeometryConverter x:Key="toolToGeometryConverter"/>
        <converters:DirectionToMatrixConverter x:Key="directionToMatrixConverter"/>
        <converters:ColorToBitmapStreamConverter x:Key="colorToBitmapStreamConverter" />
        <converters:PanelToGemetryConverter x:Key="panelToGeometryConverter"/>
        <DataTemplate  x:Key="element3dDataTemplate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="element3dDataTemplateXLinearTranslate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                        <TranslateTransform3D >
                            <TranslateTransform3D.OffsetX>
                                <MultiBinding Converter="{StaticResource linearLinkPositionConverter}">
                                    <Binding Path="LinkToParent.Value"/>
                                    <Binding Path="LinkToParent.Pos"/>
                                </MultiBinding>
                            </TranslateTransform3D.OffsetX>
                        </TranslateTransform3D>
                    </Transform3DGroup>
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="element3dDataTemplateYLinearTranslate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                        <TranslateTransform3D >
                            <TranslateTransform3D.OffsetY>
                                <MultiBinding Converter="{StaticResource linearLinkPositionConverter}">
                                    <Binding Path="LinkToParent.Value"/>
                                    <Binding Path="LinkToParent.Pos"/>
                                </MultiBinding>
                            </TranslateTransform3D.OffsetY>
                        </TranslateTransform3D>
                    </Transform3DGroup>
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="element3dDataTemplateZLianearTranslate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                        <TranslateTransform3D >
                            <TranslateTransform3D.OffsetZ>
                                <MultiBinding Converter="{StaticResource linearLinkPositionConverter}">
                                    <Binding Path="LinkToParent.Value"/>
                                    <Binding Path="LinkToParent.Pos"/>
                                </MultiBinding>
                            </TranslateTransform3D.OffsetZ>
                        </TranslateTransform3D>
                    </Transform3DGroup>
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="element3dDataTemplateXPneumaticTranslate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                        <TranslateTransform3D OffsetX="{Binding LinkToParent.Value}" />
                    </Transform3DGroup>
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="element3dDataTemplateYPneumaticTranslate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                        <TranslateTransform3D OffsetY="{Binding LinkToParent.Value}" />
                    </Transform3DGroup>
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="element3dDataTemplateZPneumaticTranslate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                        <TranslateTransform3D OffsetZ="{Binding LinkToParent.Value}" />
                    </Transform3DGroup>
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="element3dDataTemplatePneumaticRotary">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                        <RotateTransform3D CenterX="0.0" CenterY="0.0" CenterZ="0.0">
                            <RotateTransform3D.Rotation>
                                <AxisAngleRotation3D Axis="{Binding LinkToParent.Direction, Converter={StaticResource directionToAxisConverter}}" Angle="{Binding LinkToParent.Value}"/>
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                    </Transform3DGroup>
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="toolHolderDataTemplate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}">
                    <lhx3D:ItemsModel3D.Transform>
                        <Transform3DGroup>
                            <MatrixTransform3D Matrix="{Binding Direction, Converter={StaticResource directionToMatrixConverter}}" />
                            <TranslateTransform3D OffsetX="{Binding Position.X}" OffsetY="{Binding Position.Y}" OffsetZ="{Binding Position.Z}" />
                        </Transform3DGroup>
                    </lhx3D:ItemsModel3D.Transform>
                </lhx3D:ItemsModel3D>
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="toolHolderDataTemplateZPneumatic">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                        <TranslateTransform3D OffsetZ="{Binding LinkToParent.Value}" />
                    </Transform3DGroup>
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}">
                    <lhx3D:ItemsModel3D.Transform>
                        <Transform3DGroup>
                            <MatrixTransform3D Matrix="{Binding Direction, Converter={StaticResource directionToMatrixConverter}}" />
                            <TranslateTransform3D OffsetX="{Binding Position.X}" OffsetY="{Binding Position.Y}" OffsetZ="{Binding Position.Z}" />
                        </Transform3DGroup>
                    </lhx3D:ItemsModel3D.Transform>
                </lhx3D:ItemsModel3D>
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate  x:Key="toolHolderDataTemplateRotary">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                        <RotateTransform3D CenterX="0.0" CenterY="0.0" CenterZ="0.0">
                            <RotateTransform3D.Rotation>
                                <AxisAngleRotation3D Axis="{Binding LinkToParent.Direction, Converter={StaticResource directionToAxisConverter}}" Angle="{Binding LinkToParent.Value}"/>
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                    </Transform3DGroup>
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding ModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}">
                    <lhx3D:ItemsModel3D.Transform>
                        <Transform3DGroup>
                            <MatrixTransform3D Matrix="{Binding Direction, Converter={StaticResource directionToMatrixConverter}}" />
                            <TranslateTransform3D OffsetX="{Binding Position.X}" OffsetY="{Binding Position.Y}" OffsetZ="{Binding Position.Z}" />
                        </Transform3DGroup>
                    </lhx3D:ItemsModel3D.Transform>
                </lhx3D:ItemsModel3D>
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate x:Key="toolDataTemplate">
            <hx:CompositeModel3D>
                <hx:MeshGeometryModel3D Geometry="{Binding Tool, Converter={StaticResource toolToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <hx:MeshGeometryModel3D Geometry="{Binding ConeModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding ConeColor, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate x:Key="angularTransmissionDataTemplate">
            <hx:CompositeModel3D>
                <hx:MeshGeometryModel3D Geometry="{Binding BodyModelFile, Converter={StaticResource modelNameToGeometryConverter}}"
                                        Material="{Binding Color, Converter={StaticResource colorToMaterialConverter}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate x:Key="atToolholderDataTemplate">
            <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}">
                <lhx3D:ItemsModel3D.Transform>
                    <Transform3DGroup>
                        <MatrixTransform3D Matrix="{Binding Direction, Converter={StaticResource directionToMatrixConverter}}" />
                        <TranslateTransform3D OffsetX="{Binding Position.X}" OffsetY="{Binding Position.Y}" OffsetZ="{Binding Position.Z}" />
                    </Transform3DGroup>
                </lhx3D:ItemsModel3D.Transform>
            </lhx3D:ItemsModel3D>
        </DataTemplate>
        <DataTemplate x:Key="panelTemplate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <TranslateTransform3D OffsetX="{Binding OffsetX}"/>
                </hx:CompositeModel3D.Transform>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
                <hx:MeshGeometryModel3D Geometry="{Binding Converter={StaticResource panelToGeometryConverter}}"
                                        Material="{Binding Panel, Source={StaticResource materials}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate x:Key="sectionedPanelTemplate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <Transform3DGroup>
                        <TranslateTransform3D OffsetX="{Binding CenterX}" OffsetY="{Binding CenterY}" OffsetZ="{Binding CenterZ}"/>
                        <TranslateTransform3D OffsetX="{Binding OffsetX}"/>
                    </Transform3DGroup>                    
                </hx:CompositeModel3D.Transform>
                <lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />
                <!--<hx:ItemsModel3D ItemsSource="{Binding Faces}" IsRendering="{Binding IsFacesVisible}">-->
                <hx:ItemsModel3D ItemsSource="{Binding Faces}">
                    <hx:ItemsModel3D.ItemTemplate>
                        <DataTemplate>
                            <hx:MeshGeometryModel3D Geometry="{Binding Geometry}"
                                                    Material="{Binding Panel, Source={StaticResource materials}}">
                                <!--<hx:MeshGeometryModel3D.RenderWireframe>
                                    <MultiBinding Converter="{StaticResource boolAndConverter}">
                                        <Binding Path="DataContext.ViewWireFrame" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}"/>
                                        <Binding Path="IsCorrupted"/>
                                    </MultiBinding>
                                </hx:MeshGeometryModel3D.RenderWireframe>-->
                            </hx:MeshGeometryModel3D>
                        </DataTemplate>
                    </hx:ItemsModel3D.ItemTemplate>
                </hx:ItemsModel3D>
                <hx:ItemsModel3D ItemsSource="{Binding Volumes}">
                <!--<hx:ItemsModel3D ItemsSource="{Binding Volumes}" IsRendering="{Binding IsVolumesVisible}">-->
                    <hx:ItemsModel3D.ItemTemplate>
                        <DataTemplate>
                            <hx:MeshGeometryModel3D Geometry="{Binding Geometry}"
                                                    Material="{Binding PanelIntern, Source={StaticResource materials}}" >
                                <!--<hx:MeshGeometryModel3D.RenderWireframe>
                                    <MultiBinding Converter="{StaticResource boolAndConverter}">
                                        <Binding Path="DataContext.ViewWireFrame" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}"/>
                                        <Binding Path="IsCorrupted"/>
                                    </MultiBinding>
                                </hx:MeshGeometryModel3D.RenderWireframe>-->
                            </hx:MeshGeometryModel3D>
                        </DataTemplate>
                    </hx:ItemsModel3D.ItemTemplate>
                </hx:ItemsModel3D>
            </hx:CompositeModel3D>
        </DataTemplate>
        <DataTemplate x:Key="debugTemplate">
            <hx:CompositeModel3D>
                <hx:CompositeModel3D.Transform>
                    <MatrixTransform3D Matrix="{Binding Transformation, Converter={StaticResource staticTransformationConverter}}" />
                </hx:CompositeModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding Debug, Source={StaticResource geometries}}"
                                        Material="{Binding Debug, Source={StaticResource materials}}"
                                        CullMode="Back"
                                        DepthBias="-100"
                                        IsHitTestVisible="True"
                                        IsThrowingShadow="False" 
                                        IsSelected="{Binding IsSelected, Mode=TwoWay}"
                                        IsRendering="{Binding IsVisible}"
                                        PostEffects="{Binding PostEffects}"/>
                <!--<lhx3D:ItemsModel3D ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource itemModelTemplateSelector}" />-->
            </hx:CompositeModel3D>
        </DataTemplate>
        <selectors:ItemModel3DTemplateSelector x:Key="itemModelTemplateSelector">
            <selectors:ItemModel3DTemplateSelectorItem When="Default" Then="{StaticResource element3dDataTemplate}" />
            <selectors:ItemModel3DTemplateSelectorItem When="XLinearTranslateEle" Then="{StaticResource element3dDataTemplateXLinearTranslate}" />
            <selectors:ItemModel3DTemplateSelectorItem When="YLinearTranslateEle" Then="{StaticResource element3dDataTemplateYLinearTranslate}" />
            <selectors:ItemModel3DTemplateSelectorItem When="ZLinearTranslateEle" Then="{StaticResource element3dDataTemplateZLianearTranslate}" />
            <selectors:ItemModel3DTemplateSelectorItem When="XPneumaticTranslateEle" Then="{StaticResource element3dDataTemplateXPneumaticTranslate}" />
            <selectors:ItemModel3DTemplateSelectorItem When="YPneumaticTranslateEle" Then="{StaticResource element3dDataTemplateYPneumaticTranslate}" />
            <selectors:ItemModel3DTemplateSelectorItem When="ZPneumaticTranslateEle" Then="{StaticResource element3dDataTemplateZPneumaticTranslate}" />
            <selectors:ItemModel3DTemplateSelectorItem When="PneumaticRotatyEle" Then="{StaticResource element3dDataTemplatePneumaticRotary}" />
            <selectors:ItemModel3DTemplateSelectorItem When="ToolEle" Then="{StaticResource toolDataTemplate}"/>
            <selectors:ItemModel3DTemplateSelectorItem When="ToolHolderEle" Then="{StaticResource toolHolderDataTemplate}"/>
            <selectors:ItemModel3DTemplateSelectorItem When="ToolHolderEleZPneu" Then="{StaticResource toolHolderDataTemplateZPneumatic}"/>
            <selectors:ItemModel3DTemplateSelectorItem When="ToolHolderEleRotary" Then="{StaticResource toolHolderDataTemplateRotary}"/>
            <selectors:ItemModel3DTemplateSelectorItem When="AngularTransmission" Then="{StaticResource angularTransmissionDataTemplate}" />
            <selectors:ItemModel3DTemplateSelectorItem When="ATToolholder" Then="{StaticResource atToolholderDataTemplate}" />
            <selectors:ItemModel3DTemplateSelectorItem When="Panel" Then="{StaticResource panelTemplate}"/>
            <selectors:ItemModel3DTemplateSelectorItem When="SectionedPanel"  Then="{StaticResource sectionedPanelTemplate}"/>
            <selectors:ItemModel3DTemplateSelectorItem When="Debug" Then="{StaticResource debugTemplate}"/>
        </selectors:ItemModel3DTemplateSelector>
    </UserControl.Resources>
    <Grid Background="Red">

        <hx:Viewport3DX
            x:Name="view3DX"
            Grid.Row="1"
            Camera="{Binding Camera}"
            CoordinateSystemLabelForeground="Gray"
            EffectsManager="{Binding EffectsManager}"
            ShowCoordinateSystem="True"
            TextBrush="Black"
            UseDefaultGestures="True"
            BackgroundColor="White"
            CameraRotationMode="Trackball"
            IsShadowMappingEnabled="True"
            RotateAroundMouseDownPoint="True"
            EnableRenderFrustum="True"
            EnableSSAO="False"
            FXAALevel="Medium" 
            EnableSwapChainRendering="False"
            InfoBackground="Transparent"
            InfoForeground="Black">
            <hx:Viewport3DX.InputBindings>
                <KeyBinding Key="B" Command="hx:ViewportCommands.BackView" />
                <KeyBinding Key="F" Command="hx:ViewportCommands.FrontView" />
                <KeyBinding Key="U" Command="hx:ViewportCommands.TopView" />
                <KeyBinding Key="D" Command="hx:ViewportCommands.BottomView" />
                <KeyBinding Key="L" Command="hx:ViewportCommands.LeftView" />
                <KeyBinding Key="R" Command="hx:ViewportCommands.RightView" />
                <KeyBinding Command="hx:ViewportCommands.ZoomExtents" Gesture="Control+E" />
                <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="RightClick" />
                <MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="MiddleClick" />
                <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="Shift+RightClick" />
                <!--<MouseBinding Command="hx:ViewportCommands.Pan" Gesture="LeftClick" />-->
            </hx:Viewport3DX.InputBindings>
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown3D">
                    <ie:CallMethodAction MethodName="OnMouseDown3DHandler" TargetObject="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
            <!--<hx:AmbientLight3D Color="{Binding AmbientLightColor}"/>-->

            <hx:ItemsModel3D ItemsSource="{Binding AmbientLights}">
                <hx:ItemsModel3D.ItemTemplate>
                    <DataTemplate>
                        <hx:AmbientLight3D Color="{Binding Color}" />
                    </DataTemplate>
                </hx:ItemsModel3D.ItemTemplate>
            </hx:ItemsModel3D>

            <hx:ItemsModel3D ItemsSource="{Binding DirectionalLights}">
                <hx:ItemsModel3D.ItemTemplate>
                    <DataTemplate>
                        <hx:DirectionalLight3D Color="{Binding Color}" Direction="{Binding Direction}"/>
                    </DataTemplate>
                </hx:ItemsModel3D.ItemTemplate>
            </hx:ItemsModel3D>

            <hx:ItemsModel3D ItemsSource="{Binding DirectionalOrientedByCameraLights}">
                <hx:ItemsModel3D.ItemTemplate>
                    <DataTemplate>
                        <hx:DirectionalLight3D Color="{Binding Color}" 
                                               Direction="{Binding Path=DataContext.Camera.LookDirection, RelativeSource={RelativeSource AncestorType={x:Type hx:Viewport3DX}}, Mode=OneWay}" />
                    </DataTemplate>
                </hx:ItemsModel3D.ItemTemplate>
            </hx:ItemsModel3D>

            <hx:ItemsModel3D ItemsSource="{Binding SpotLights}">
                <hx:ItemsModel3D.ItemTemplate>
                    <DataTemplate>
                        <hx:SpotLight3D Color="{Binding Color}" 
                                        Direction="{Binding Path=DataContext.Camera.LookDirection, RelativeSource={RelativeSource AncestorType={x:Type hx:Viewport3DX}}, Mode=OneWay}" 
                                        Position="{Binding Path=DataContext.Camera.Position, RelativeSource={RelativeSource AncestorType={x:Type hx:Viewport3DX}}, Mode=OneWay}" 
                                        IsRendering="True" 
                                        Falloff="0.4"
                                        OuterAngle="90"
                                        InnerAngle="75"
                                        Range="{Binding Path=DataContext.Camera.FarPlaneDistance, RelativeSource={RelativeSource AncestorType={x:Type hx:Viewport3DX}}, Mode=OneWay}"/>
                    </DataTemplate>
                </hx:ItemsModel3D.ItemTemplate>
            </hx:ItemsModel3D>

            <lhx3D:ItemsModel3D
                x:Name="itemsModel1"
                ItemsSource="{Binding Kernel.Machines}" ItemTemplateSelector="{StaticResource itemModelTemplateSelector}" >
            </lhx3D:ItemsModel3D>

            <hx:PostEffectMeshBorderHighlight
                DrawMode="Merged"
                EffectName="highlight"
                NumberOfBlurPass="2" />
            <hx:PostEffectMeshXRay x:Name="xrayLine" EffectName="xrayLine" />
            <hx:ScreenQuadModel3D x:Name="screenQuadModel3D">
                <hx:ScreenQuadModel3D.Texture>
                    <MultiBinding Converter="{StaticResource colorToBitmapStreamConverter}">
                        <Binding Path="EffectsManager"/>
                        <Binding Path="BackgroudColor.Start"/>
                        <Binding Path="BackgroudColor.Stop"/>
                    </MultiBinding>
                </hx:ScreenQuadModel3D.Texture>
            </hx:ScreenQuadModel3D>

        </hx:Viewport3DX>

        <StatusBar VerticalAlignment="Bottom">
            <StatusBar.Background>
                <SolidColorBrush Opacity="0.5" Color="WhiteSmoke" />
            </StatusBar.Background>
            <StatusBarItem>
                <TextBlock
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Text="{Binding FrameRate, ElementName=view3DX, StringFormat=D3D11 - \{0:0.00\} FPS}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.Position, StringFormat=Position: \{0:0.0\}}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.LookDirection, StringFormat=LookDirection: \{0:0.0\}}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.UpDirection, StringFormat=UpDirection: \{0:0.0\}}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Items.Count, ElementName=view3DX, StringFormat=Children: \{0\}}" />
            </StatusBarItem>
        </StatusBar>

    </Grid>
</UserControl>
